#!/usr/bin/env ruby
# frozen_string_literal: true

require "thor"
require "require_all"
require "date"

require_all "lib/advent_of_code_2021"

class OutOfDateError < StandardError; end

class AdventCli < Thor
  # rubocop:disable Metrics/MethodLength
  desc "day DAY", "Execute code for given DAY. If none given, uses today's day as input."
  def day(day = DateTime.now.day)
    raise OutOfDateError if day.to_i > 24

    klass_name = "Day#{day}::Entry"
    klass = Object.const_get(klass_name)
    entry = File.new("input/day#{day}.txt").read

    result = klass.perform(entry)

    puts result
  rescue OutOfDateError
    puts "We don't open a new challenge on the #{day}th. Sadch."
  rescue NameError
    puts "404! Don't forget to create a \"#{klass_name}\" class with a class #perform method."
  rescue Errno::ENOENT
    puts "404! Don't forget to create a \"input/day#{day}.txt\" file with the input required for today's task."
  end
  # rubocop:enable Metrics/MethodLength
end

AdventCli.start(ARGV)
